data:text/html;base64,PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+QWxsT3JpZ2lucyBGZXRjaGVyPC90aXRsZT4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsKICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICAgICAgbWFyZ2luOiAwOwogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwOwogICAgICAgIH0KICAgICAgICAuY29udGFpbmVyIHsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgIH0KICAgICAgICAubG9hZGVyIHsKICAgICAgICAgICAgYm9yZGVyOiAxNnB4IHNvbGlkICNmM2YzZjM7CiAgICAgICAgICAgIGJvcmRlci10b3A6IDE2cHggc29saWQgIzM0OThkYjsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgICAgICB3aWR0aDogMTIwcHg7CiAgICAgICAgICAgIGhlaWdodDogMTIwcHg7CiAgICAgICAgICAgIGFuaW1hdGlvbjogc3BpbiAycyBsaW5lYXIgaW5maW5pdGU7CiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICAgICAgfQogICAgICAgIEBrZXlmcmFtZXMgc3BpbiB7CiAgICAgICAgICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH0KICAgICAgICAgICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH0KICAgICAgICB9CiAgICAgICAgI291dHB1dCB7CiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICAgICAgICAgIHdpZHRoOiAxMDB2dzsKICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDsKICAgICAgICAgICAgYm9yZGVyOiBub25lOwogICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgIDxoMT5BbGxPcmlnaW5zIEZldGNoZXI8L2gxPgogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0idXJsSW5wdXQiIHBsYWNlaG9sZGVyPSJFbnRlciBVUkwiPgogICAgICAgIDxidXR0b24gb25jbGljaz0iZmV0Y2hEYXRhKCkiPlN1Ym1pdDwvYnV0dG9uPgogICAgICAgIDxkaXYgY2xhc3M9ImxvYWRlciIgaWQ9ImxvYWRlciI+PC9kaXY+CiAgICAgICAgPGlmcmFtZSBpZD0ib3V0cHV0Ij48L2lmcmFtZT4KICAgIDwvZGl2PgoKICAgIDxzY3JpcHQ+CiAgICAgICAgZnVuY3Rpb24gZmV0Y2hEYXRhKCkgewogICAgICAgICAgICBjb25zdCB1cmxJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1cmxJbnB1dCcpLnZhbHVlOwogICAgICAgICAgICBpZiAoIXVybElucHV0KSB7CiAgICAgICAgICAgICAgICBhbGVydCgnUGxlYXNlIGVudGVyIGEgVVJMJyk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnN0IGxvYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2FkZXInKTsKICAgICAgICAgICAgY29uc3Qgb3V0cHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ291dHB1dCcpOwogICAgICAgICAgICBsb2FkZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgICAgICAgIG91dHB1dC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwoKICAgICAgICAgICAgY29uc3QgZG9tYWluID0gbmV3IFVSTCh1cmxJbnB1dCkuaG9zdG5hbWU7CiAgICAgICAgICAgIGNvbnN0IGFwaVVybCA9IGBodHRwczovL2FwaS5hbGxvcmlnaW5zLndpbi9nZXQ/dXJsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHVybElucHV0KX1gOwogICAgICAgICAgICBjb25zdCBiYXNlTGluayA9IGVuY29kZVVSSUNvbXBvbmVudChkb21haW4pOwogICAgICAgICAgICAKICAgICAgICAgICAgZmV0Y2goYXBpVXJsKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQogICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgICAgICAgICAgbG9hZGVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgICAgICAgICAgICAgb3V0cHV0LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlmcmFtZURvYyA9IG91dHB1dC5jb250ZW50RG9jdW1lbnQgfHwgb3V0cHV0LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7CiAgICAgICAgICAgICAgICAgICAgaWZyYW1lRG9jLm9wZW4oKTsKICAgICAgICAgICAgICAgICAgICBpZnJhbWVEb2Mud3JpdGUoYDxiYXNlIGhyZWY9IiR7YmFzZUxpbmt9IiB0YXJnZXQ9Il9ibGFuayI+JHtkYXRhLmNvbnRlbnRzfWApOwogICAgICAgICAgICAgICAgICAgIGlmcmFtZURvYy5jbG9zZSgpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgICAgICAgbG9hZGVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ0Vycm9yIGZldGNoaW5nIGRhdGE6ICcgKyBlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICA8L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==